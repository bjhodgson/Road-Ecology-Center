# Read each Excel file into a list of dataframes
df_list <- lapply(file_list, read_excel)
# Combine the dataframes into one dataframe
combined_df <- bind_rows(df_list)
# View the combined dataframe
print(combined_df)
# List of columns to remove
columns_to_remove <- c(
"OBJECTID", "Join_Count",	"TARGET_FID",
"TARGET_FID_1", "Valid_Pair", "Highway_SR", "New_ID", "Field15", "FID_1",
"Join_Count_1", "TARGET_F_1", "Id", "ORIG_FID", "ORIG_SEQ",
"Field15_1", "NEAR_FID", "NEAR_DIST", "NEAR_X", "NEAR_Y", "DDLat", "DDLon", "ORIG_OID",
"Field15_12", "Field15_13", "Valid_Pa_2", "Valid_Pa_3", "Highway__2", "Highway__3",
"TARGET_F_2", "New_ID_12", "New_ID__13", "TARGET_F_3", "OBJECTID_1", "FID_", "Latitude_1",
"Longitud_1"
)
# Remove the specified columns and filter by kills
cleaned_df <- combined_df %>%
select(-one_of(columns_to_remove)) %>%
filter(chips_An_1 %in% c("Fatality, result of collision", "Fatality, result of dispatch") |
condition %in% c("Dead") ) # Filter by kills
# Histogram of total kills per median type
cleaned_df %>%
group_by(New_ID_1) %>%
summarise(count = n()) %>%
ggplot(aes(x = New_ID_1, y = count, fill = New_ID_1)) +
geom_bar(stat = "identity") +
labs(title = "Total Kills per Median Type", x = "", y = "Total Kills", fill = "Median Type") +
theme_minimal()
# Create list of excluded median types
exclude_values <- c("tran")
# Filter out excluded median types
cleaned_df_filtered <- cleaned_df %>%
filter(!New_ID_1 %in% exclude_values)
# Histogram of number of median pair types
cleaned_df_filtered %>%
group_by(Pair_Type) %>%
summarise(count = n()) %>%
ggplot(aes(x = Pair_Type, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(x = "Type of Median Pair", y = "Number of Kills") +
theme_minimal()
# Add concrete median binary variable
cleaned_df_filtered$concrete_median <- as.factor(ifelse(cleaned_df_filtered$New_ID_1 == "con", 1, 0))
# Histogram of kills per concrete vs non-concrete median type
cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Kills by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Total Hits") +
theme_minimal()
# Group hits by unique pair ID and median type
grouped_df <- cleaned_df[!is.na(cleaned_df$New_ID_1), ] %>%
group_by(Pair_ID, New_ID_1) %>%
summarise(count = n())
# Summary statistics by grouped type
summary_stats_mediantype <- grouped_df %>%
group_by(New_ID_1) %>%
summarise(
mean_count = mean(count),
median_count = median(count),
sd_count = sd(count),
min_count = min(count),
max_count = max(count)
)
# Print the results
print(summary_stats_mediantype)
# Stacked bar plot of hits per transect by median type
ggplot(grouped_df, aes(x = factor(Pair_ID), y = count, fill = New_ID_1)) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Number of Kills per Road Transect by Median Type",
x = "Pair ID",
y = "Total Kills",
fill = "Median Type") +
theme_minimal() #+
scale_fill_brewer(palette = "Set1")
# Difference in counts (concrete - nonconcrete)
difference_df <- grouped_df %>%
filter(New_ID_1 %in% c("con", "veg", "thrie", "cab", "none")) %>% # Filter and mutate to add concrete_var category
mutate(concrete_var = ifelse(New_ID_1 == "con", "concrete", "nonconcrete")) %>%
pivot_wider(names_from = concrete_var, values_from = count, values_fill = list(count = 0)) %>% # Pivot to wide format
group_by(Pair_ID) %>%
summarise( # Summarize to get total counts for 'concrete' and 'nonconcrete' per Pair_ID
concrete = sum(concrete, na.rm = TRUE),
nonconcrete = sum(nonconcrete, na.rm = TRUE),
difference = concrete - nonconcrete
) %>%
select(Pair_ID, difference) # Select desired columns for dataframe
# View the data frame
print(difference_df)
# Exploratory visualizations of difference in counts
# Visualize distribution in boxplot
boxplot(difference_df$difference)
# Visualize distribution in density
ggplot(data = difference_df, aes(x = difference)) +
geom_density() +
ggtitle("Difference in Counts (concrete - nonconcrete)") +
geom_vline(aes(xintercept = mean(difference)), color = "red", linetype = "dashed", size = 1.5) + # Add line for mean difference
theme_bw()
# Summary statistics
summary(difference_df$difference)
# Group hits by year and median type
# Create grouped dataframe of hits by year
year_df <- cleaned_df %>%
filter(!is.na(New_ID_1)) %>%
mutate(obs_year = as.factor(year(ymd_hms(observatio)))) %>%
group_by(obs_year, Pair_ID, New_ID_1) %>%
summarise(count = n(), .groups = 'drop')
date_range = c(2015:2023)
# Summary statistics of hits by grouped year, type
summary_stats_mediantype_by_year <- year_df %>%
filter(obs_year %in% date_range) %>%
group_by(New_ID_1, obs_year) %>%
summarise(
mean_count = mean(count),
median_count = median(count),
sd_count = sd(count),
min_count = min(count),
max_count = max(count)
)
print(summary_stats_medtype_by_year)
# Bar plot of average kills by median type over time
ggplot(summary_stats_mediantype_by_year, aes(x=New_ID_1, y=mean_count)) +
geom_bar(stat = "identity", position="stack", aes(fill=New_ID_1)) +
facet_wrap(vars(obs_year)) +
labs(x="", y="Average Kills per Mile", fill="Median Type") +
theme_bw()
# Bar plot of total kills by median type over time
year_df %>%
filter(obs_year %in% date_range) %>%
ggplot(aes(x=New_ID_1, y=count)) +
geom_bar(stat = "identity", position="stack", aes(fill=New_ID_1)) +
facet_wrap(vars(obs_year)) +
labs(x="", y="Total Kills per Mile", fill="Median Type") +
theme_bw()
# Stacked bar plot of total kills by median type over time
year_df %>%
filter(obs_year %in% date_range) %>%
group_by(New_ID_1, obs_year) %>%
ggplot(aes(x=obs_year, y=count, fill=New_ID_1)) +
geom_bar(stat = "identity", position="stack") +
labs(x="", y="Total Kills", fill="Median Type") +
theme_bw()
# Bar plot of total kills by median type over time
year_df %>%
filter(obs_year %in% date_range) %>%
ggplot(aes(x=New_ID_1, y=count)) +
geom_bar(stat = "identity", position="stack", aes(fill=New_ID_1)) +
facet_wrap(vars(obs_year)) +
labs(x="", y="Total Kills per Mile", fill="Median Type") +
theme_bw()
# Bar plot of average kills by median type over time
ggplot(summary_stats_mediantype_by_year, aes(x=New_ID_1, y=mean_count)) +
geom_bar(stat = "identity", position="stack", aes(fill=New_ID_1)) +
facet_wrap(vars(obs_year)) +
labs(x="", y="Average Kills per Mile", fill="Median Type") +
theme_bw()
summary_stats_mediantype_by_year
# Bar plot of total kills by median type over time
year_df %>%
filter(obs_year %in% date_range) %>%
ggplot(aes(x=New_ID_1, y=count)) +
geom_bar(stat = "identity", position="stack", aes(fill=New_ID_1)) +
facet_wrap(vars(obs_year)) +
labs(x="", y="Total Kills per Mile", fill="Median Type") +
theme_bw()
year_df
year_df %>%
filter(obs_year %in% date_range) %>%
group_by(obs_year, New_ID_1) %>%
summarise(avg_count = mean(count)) %>%
ggplot(aes(x = New_ID_1, y = avg_count)) +
geom_bar(stat = "identity", position = "stack", aes(fill = New_ID_1)) +
facet_wrap(vars(obs_year)) +
labs(x = "", y = "Average Kills per Mile", fill = "Median Type") +
theme_bw()
# Bar plot of average kills by median type over time
ggplot(summary_stats_mediantype_by_year, aes(x=New_ID_1, y=mean_count)) +
geom_bar(stat = "identity", position="stack", aes(fill=New_ID_1)) +
facet_wrap(vars(obs_year)) +
labs(x="", y="Average Kills per Mile", fill="Median Type") +
theme_bw()
# Bar plot of average kills by median type over time with count labels
year_df %>%
filter(obs_year %in% date_range) %>%
group_by(obs_year, New_ID_1) %>%
summarise(avg_count = mean(count)) %>%
ggplot(aes(x = New_ID_1, y = avg_count)) +
geom_bar(stat = "identity", position = "stack", aes(fill = New_ID_1)) +
geom_text(aes(label = round(avg_count, 1)), position = position_stack(vjust = 0.5)) +
facet_wrap(vars(obs_year)) +
labs(x = "", y = "Average Kills per Mile", fill = "Median Type") +
theme_bw()
# Bar plot of average kills by median type over time with count labels
year_df %>%
filter(obs_year %in% date_range) %>%
group_by(obs_year, New_ID_1) %>%
summarise(avg_count = mean(count)) %>%
ggplot(aes(x = New_ID_1, y = avg_count)) +
geom_bar(stat = "identity", position = "stack", aes(fill = New_ID_1)) +
geom_text(aes(label = round(count, 1)), position = position_stack(vjust = 0.5)) +
facet_wrap(vars(obs_year)) +
labs(x = "", y = "Average Kills per Mile", fill = "Median Type") +
theme_bw()
# Bar plot of total kills by median type over time with count labels
year_df %>%
filter(obs_year %in% date_range) %>%
ggplot(aes(x = New_ID_1, y = count)) +
geom_bar(stat = "identity", position = "stack", aes(fill = New_ID_1)) +
geom_text(aes(label = count), position = position_stack(vjust = 0.5)) +
facet_wrap(vars(obs_year)) +
labs(x = "", y = "Total Kills per Mile", fill = "Median Type") +
theme_bw()
# Bar plot of total kills by median type over time with count labels
year_df %>%
filter(obs_year %in% date_range) %>%
ggplot(aes(x = New_ID_1, y = count)) +
geom_bar(stat = "identity", position = "stack", aes(fill = New_ID_1)) +
geom_text(aes(label = count)) +
facet_wrap(vars(obs_year)) +
labs(x = "", y = "Total Kills per Mile", fill = "Median Type") +
theme_bw()
year_df %>%
filter(obs_year %in% date_range) %>%
group_by(obs_year, New_ID_1) %>%
summarise(avg_count = mean(count)) %>%
ggplot(aes(x = New_ID_1, y = avg_count)) +
geom_bar(stat = "identity", position = "stack", aes(fill = New_ID_1)) +
facet_wrap(vars(obs_year)) +
labs(x = "", y = "Average Kills per Mile", fill = "Median Type") +
theme_bw()
# Bar plot of average kills by median type over time
ggplot(summary_stats_mediantype_by_year, aes(x=New_ID_1, y=mean_count)) +
geom_bar(stat = "identity", position="stack", aes(fill=New_ID_1)) +
facet_wrap(vars(obs_year)) +
labs(x="", y="Average Kills per Mile", fill="Median Type") +
theme_bw()
year_df
# Summarize counts by unique New_ID_1 per obs_year
summarized_df <- year_df %>%
group_by(obs_year, New_ID_1) %>%
summarise(total_count = sum(count))
View(summarized_df)
# Create the plot
ggplot(summarized_df, aes(x = New_ID_1, y = total_count)) +
geom_bar(stat = "identity", aes(fill = New_ID_1)) +
geom_text(aes(label = total_count), vjust = -0.5, size = 3) +  # Add count labels above bars
facet_wrap(~ obs_year) +
labs(x = "", y = "Total Count", fill = "New_ID_1") +
theme_bw()
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
ggplot(summarized_df, aes(x = New_ID_1, y = total_count)) +
geom_bar(stat = "identity", aes(fill = New_ID_1)) +
geom_text(aes(label = total_count), vjust = -0.5, size = 3) +  # Add count labels above bars
facet_wrap(~ obs_year) +
labs(x = "", y = "Total Count", fill = "New_ID_1") +
theme_bw()
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
ggplot(aes(x = New_ID_1, y = total_count)) +
geom_bar(stat = "identity", aes(fill = New_ID_1)) +
geom_text(aes(label = total_count), vjust = -0.5, size = 3) +  # Add count labels above bars
facet_wrap(~ obs_year) +
labs(x = "", y = "Total Count", fill = "New_ID_1") +
theme_bw()
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
summarise(avg_count = mean(count)) %>%
ggplot(aes(x = New_ID_1, y = avg_count)) +
geom_bar(stat = "identity", aes(fill = New_ID_1)) +
geom_text(aes(label = total_count), vjust = -0.5, size = 3) +  # Add count labels above bars
facet_wrap(~ obs_year) +
labs(x = "", y = "Total Count", fill = "New_ID_1") +
theme_bw()
# Summarize counts by unique New_ID_1 per obs_year
summarized_df <- year_df %>%
group_by(obs_year, New_ID_1) %>%
summarise(total_count = sum(count))
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
ggplot(aes(x = New_ID_1, y = total_count)) +
geom_bar(stat = "identity", aes(fill = New_ID_1)) +
geom_text(aes(label = round(total_count, 1)), vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
# Summarize counts by unique New_ID_1 per obs_year
summarized_df <- year_df %>%
group_by(obs_year, New_ID_1) %>%
summarise(total_count = sum(count))
# Calculate average count per New_ID_1 category
avg_df <- summarized_df %>%
group_by(New_ID_1) %>%
summarise(avg_count = mean(total_count))
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
ggplot(aes(x = New_ID_1, y = avg_count)) +
geom_bar(stat = "identity", aes(fill = New_ID_1)) +
geom_text(data = summarized_df, aes(label = total_count), vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
# Create the plot
avg_df %>%
filter(obs_year %in% date_range) %>%
ggplot(aes(x = New_ID_1, y = avg_count)) +
geom_bar(stat = "identity", aes(fill = New_ID_1)) +
geom_text(data = summarized_df, aes(label = total_count), vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
# Summarize counts by unique New_ID_1 per obs_year
summarized_df <- year_df %>%
group_by(obs_year, New_ID_1) %>%
summarise(total_count = sum(count))
# Calculate average count per New_ID_1 category
avg_df <- summarized_df %>%
group_by(New_ID_1) %>%
summarise(avg_count = mean(total_count))
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
ggplot() +
geom_bar(aes(x = New_ID_1, y = avg_count, fill = New_ID_1), data = avg_df, stat = "identity") +
geom_text(aes(x = New_ID_1, y = total_count, label = round(total_count, 1)), data = summarized_df, vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
date_range = c(2015:2023)
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
ggplot() +
geom_bar(aes(x = New_ID_1, y = avg_count, fill = New_ID_1), data = avg_df, stat = "identity") +
geom_text(aes(x = New_ID_1, y = total_count, label = round(total_count, 1)), data = summarized_df, vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
ggplot() +
geom_bar(aes(x = New_ID_1, y = avg_count, fill = New_ID_1), data = avg_df[avg_df$obs_year %in% date_range, ], stat = "identity") +
geom_text(aes(x = New_ID_1, y = total_count, label = round(total_count, 1)), data = summarized_df, vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
View(avg_df)
year_df
# Calculate average for each category
averages <- data %>%
group_by(New_ID_1) %>%
summarise(avg_count = mean(count))
# Calculate average for each category
averages <- year_df %>%
group_by(New_ID_1) %>%
summarise(avg_count = mean(count))
# Create the plot
ggplot(year_df, aes(x = New_ID_1, y = count)) +
geom_bar(stat = "identity") +
geom_text(year_df = averages, aes(label = ifelse(avg_count == 1, round(avg_count, 1), "")), vjust = -0.5, size = 3) +
labs(x = "Category", y = "Count", title = "Counts by Category") +
theme_minimal()
# Create the plot
ggplot(averages, aes(x = New_ID_1, y = count)) +
geom_bar(stat = "identity") +
geom_text(data = averages, aes(label = ifelse(avg_count == 1, round(avg_count, 1), "")), vjust = -0.5, size = 3) +
labs(x = "Category", y = "Count", title = "Counts by Category") +
theme_minimal()
# Calculate average for each category
averages <- year_df %>%
group_by(New_ID_1) %>%
summarise(avg_count = mean(count))
# Create the plot
ggplot(averages, aes(x = New_ID_1, y = count)) +
geom_bar(stat = "identity") +
geom_text(data = averages, aes(label = ifelse(avg_count == 1, round(avg_count, 1), "")), vjust = -0.5, size = 3) +
labs(x = "Category", y = "Count", title = "Counts by Category") +
theme_minimal()
View(summarized_df)
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
ggplot() +
geom_bar(aes(x = New_ID_1, y = avg_count, fill = New_ID_1), data = avg_df[avg_df$obs_year %in% date_range, ], stat = "identity") +
geom_text(aes(x = New_ID_1, y = total_count, label = round(total_count, 1)), data = summarized_df, vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
# Summarize counts by unique New_ID_1 per obs_year
summarized_df <- year_df %>%
group_by(obs_year, New_ID_1) %>%
summarise(total_count = sum(count))
# Calculate average count per New_ID_1 category
avg_df <- summarized_df %>%
group_by(New_ID_1) %>%
summarise(avg_count = mean(total_count))
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
ggplot() +
geom_bar(aes(x = New_ID_1, y = avg_count, fill = New_ID_1), data = avg_df[avg_df$obs_year %in% date_range, ], stat = "identity") +
geom_text(aes(x = New_ID_1, y = total_count, label = round(total_count, 1)), data = summarized_df, vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
# Create the plot
summarized_df %>%
ggplot() +
geom_bar(aes(x = New_ID_1, y = avg_count, fill = New_ID_1), data = avg_df[avg_df$obs_year %in% date_range, ], stat = "identity") +
geom_text(aes(x = New_ID_1, y = total_count, label = round(total_count, 1)), data = summarized_df, vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
# Create the plot
summarized_df %>%
ggplot() +
geom_bar(aes(x = New_ID_1, y = avg_count, fill = New_ID_1), data = avg_df, stat = "identity") +
geom_text(aes(x = New_ID_1, y = total_count, label = round(total_count, 1)), data = summarized_df, vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
# Summarize counts by unique New_ID_1 per obs_year
summarized_df <- year_df %>%
group_by(obs_year, New_ID_1) %>%
summarise(total_count = sum(count))
# Calculate average count per New_ID_1 category
avg_df <- summarized_df %>%
group_by(New_ID_1) %>%
summarise(avg_count = mean(total_count))
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
ggplot(aes(x = New_ID_1, y = avg_count)) +
geom_bar(stat = "identity", aes(fill = New_ID_1)) +
geom_text(data = summarized_df, aes(label = total_count), vjust = -0.5, size = 3) +  # Use total_count for labeling
facet_wrap(~ obs_year) +
labs(x = "", y = "Average Count", fill = "New_ID_1") +
theme_bw()
# Summarize counts by unique New_ID_1 per obs_year
summarized_df <- year_df %>%
group_by(obs_year, New_ID_1) %>%
summarise(total_count = sum(count))
# Create the plot
summarized_df %>%
filter(obs_year %in% date_range) %>%
summarise(avg_count = mean(count)) %>%
ggplot(aes(x = New_ID_1, y = avg_count)) +
geom_bar(stat = "identity", aes(fill = New_ID_1)) +
geom_text(aes(label = total_count), vjust = -0.5, size = 3) +  # Add count labels above bars
facet_wrap(~ obs_year) +
labs(x = "", y = "Total Count", fill = "New_ID_1") +
theme_bw()
# Summarize counts by unique New_ID_1 per obs_year
summarized_df <- year_df %>%
group_by(obs_year, New_ID_1) %>%
summarise(total_count = sum(count))
# Calculate average for each category across Pair_ID groups
averages <- year_df %>%
group_by(New_ID_1) %>%
summarise(avg_count = mean(count))
# Create the plot
ggplot(year_df, aes(x = New_ID_1, y = count)) +
geom_bar(stat = "identity") +
geom_text(data = averages, aes(label = ifelse(avg_count == 1, round(avg_count, 1), "")), vjust = -0.5, size = 3) +
labs(x = "Category", y = "Count", title = "Counts by Category") +
theme_minimal()
# Calculate average for each category across Pair_ID groups
averages <- year_df %>%
group_by(Pair_ID) %>%
summarise(avg_count = mean(count))
# Create the plot
ggplot(year_df, aes(x = New_ID_1, y = count)) +
geom_bar(stat = "identity") +
geom_text(data = averages, aes(label = ifelse(avg_count == 1, round(avg_count, 1), "")), vjust = -0.5, size = 3) +
labs(x = "Category", y = "Count", title = "Counts by Category") +
theme_minimal()
View(averages)
# Calculate average for each category across Pair_ID groups
averages <- year_df %>%
group_by(Pair_ID, New_ID_1) %>%
summarise(avg_count = mean(count))
# Create the plot
ggplot(year_df, aes(x = New_ID_1, y = count)) +
geom_bar(stat = "identity") +
geom_text(data = averages, aes(label = ifelse(avg_count == 1, round(avg_count, 1), "")), vjust = -0.5, size = 3) +
labs(x = "Category", y = "Count", title = "Counts by Category") +
theme_minimal()
View(averages)
# Calculate average for each category across Pair_ID groups
averages <- year_df %>%
group_by(Pair_ID, New_ID_1) %>%
summarise(avg_count = mean(count),
count = sum(count))
# Create the plot
ggplot(year_df, aes(x = New_ID_1, y = count)) +
geom_bar(stat = "identity") +
geom_text(data = averages, aes(label = ifelse(avg_count == 1, round(avg_count, 1), "")), vjust = -0.5, size = 3) +
labs(x = "Category", y = "Count", title = "Counts by Category") +
theme_minimal()
# Calculate average for each category across Pair_ID groups
averages <- year_df %>%
group_by(Pair_ID, New_ID_1, obs_year) %>%
summarise(avg_count = mean(count),
count = sum(count))
