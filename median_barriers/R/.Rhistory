ggplot(aes(x = as.factor(Pair_ID), y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
n(count(cleaned_df_filtered$Pair_ID))
count(cleaned_df_filtered$Pair_ID)
length(unique(cleaned_df_filtered$Pair_ID))
# Visualize histogram of hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer")
# Visualize histogram of hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer")
# Visualize histogram of hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer") >%>
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of deer hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of deer hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of Deer Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of deer hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Frequency of Deer Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of coyote hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Coyote") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Frequency of Coyote Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of coyote hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Owl") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Frequency of Coyote Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of coyote hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Coyote") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Frequency of Coyote Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Install and load necessary packages
# install.packages("readxl")
# install.packages("dplyr")
# install.packages("ggplot2")
library(readxl)
library(dplyr)
library(ggplot2)
# Function to list xlsx and xls files in a given directory
list_excel_files <- function(directory) {
xls_files <- list.files(path = directory, pattern = "*.xls", full.names = TRUE)
c(xls_files)
}
# Specify the path to your directory containing Excel files
directory_path <- "D:\\Documents\\road-ecology-center\\median_barriers\\CROS_medians_dataset"
# Get a list of Excel files from the directory
file_list <- list_excel_files(directory_path)
# Read each Excel file into a list of dataframes
df_list <- lapply(file_list, read_excel)
# Combine the dataframes into one dataframe
combined_df <- bind_rows(df_list)
# View the combined dataframe
print(combined_df)
# List of columns to remove
columns_to_remove <- c(
"OBJECTID", "Join_Count",	"TARGET_FID",
"TARGET_FID_1", "Valid_Pair", "Highway_SR", "New_ID", "Field15", "FID_1",
"Join_Count_1", "TARGET_F_1", "Id", "ORIG_FID", "ORIG_SEQ",
"Field15_1", "NEAR_FID", "NEAR_DIST", "NEAR_X", "NEAR_Y", "DDLat", "DDLon", "ORIG_OID",
"Field15_12", "Field15_13", "Valid_Pa_2", "Valid_Pa_3", "Highway__2", "Highway__3",
"TARGET_F_2", "New_ID_12", "New_ID__13", "TARGET_F_3", "OBJECTID_1", "FID_", "Latitude_1",
"Longitud_1"
)
# Remove the specified columns
cleaned_df <- combined_df %>% select(-one_of(columns_to_remove))
# Filter out NA values from the cleaned dataframe
cleaned_df_filtered <- cleaned_df[!is.na(cleaned_df$New_ID_1), ]
# Visualize histogram of hits per median type
cleaned_df_filtered %>%
group_by(Pair_Type) %>%
summarise(count = n()) %>%
ggplot(aes(x = Pair_Type, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of 'New_ID_1' Values", x = "Value", y = "Count") +
theme_minimal()
# Add concrete median binary variable
cleaned_df_filtered$concrete_median <- as.factor(ifelse(cleaned_df_filtered$New_ID_1 == "con", 1, 0))
# Visualize histogram of hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of deer hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Frequency of Deer Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of coyote hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Coyote") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Frequency of Coyote Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of hits per median type
cleaned_df_filtered %>%
group_by(Pair_Type) %>%
summarise(count = n()) %>%
ggplot(aes(x = Pair_Type, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of 'New_ID_1' Values", x = "Value", y = "Count") +
theme_minimal()
# Add concrete median binary variable
cleaned_df_filtered$concrete_median <- as.factor(ifelse(cleaned_df_filtered$New_ID_1 == "con", 1, 0))
# Visualize histogram of hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Create list of excluded median types
exclude_values <- c("tran")
# Filter out excluded median types
cleaned_df_filtered <- cleaned_df_filtered %>%
filter(!New_ID_1 %in% exclude_values)
# Add concrete median binary variable
cleaned_df_filtered$concrete_median <- as.factor(ifelse(cleaned_df_filtered$New_ID_1 == "con", 1, 0))
# Visualize histogram of hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
nrow[where[New_ID_1 == "conc"]]
nrow(cleaned_df_filtered %>% filter(New_ID_1 == "con"))
nrow(cleaned_df_filtered %>% filter(New_ID_1 == "tran"))
nrow(cleaned_df_filtered %>% filter(New_ID_1 != "con"))
# Visualize histogram of deer hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Frequency of Deer Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of coyote hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Coyote") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Number of Coyote Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of deer hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Number of Deer Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
cleaned_df_filtered
rownames(cleaned_df_filtered)
View(cleaned_df_filtered)
grouped_df <- cleaned_df_filtered %>%
group_by(Pair_ID, New_ID_1)
View(grouped_df)
grouped_df <- cleaned_df_filtered %>%
group_by(Pair_ID, New_ID_1) %>%
summarise(count = n())
View(grouped_df)
grouped_df <- cleaned_df[!is.na(cleaned_df$New_ID_1), ] %>%
group_by(Pair_ID, New_ID_1) %>%
summarise(count = n())
View(grouped_df)
# Create a bar plot for the New_ID_1 column
ggplot(grouped_df, aes(x = New_ID_1)) +
geom_bar() +
labs(title = "Frequency of New_ID_1",
x = "New_ID_1",
y = "Count") +
theme_minimal()
# Visualize historga
ggplot(grouped_df, aes(x = New_ID_1)) +
geom_histogram() +
labs(title = "Frequency of New_ID_1",
x = "New_ID_1",
y = "Count") +
theme_minimal()
# Visualize histogram of hits per median type
ggplot(grouped_df, aes(x = New_ID_1)) +
geom_bar() +
labs(title = "Frequency of New_ID_1",
x = "New_ID_1",
y = "Count") +
theme_minimal()
# Visualize histogram of hits per median type
cleaned_df_filtered %>%
group_by(Pair_Type) %>%
summarise(count = n()) %>%
ggplot(aes(x = Pair_Type, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Frequency of 'New_ID_1' Values", x = "Value", y = "Count") +
theme_minimal()
# Visualize histogram of hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Number of Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of deer hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Mule (or Black tailed) Deer") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Number of Deer Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Visualize histogram of coyote hits per concrete vs non-concrete median type
cleaned_df_filtered %>%
filter(animal == "Coyote") %>%
group_by(concrete_median) %>%
summarise(count = n()) %>%
ggplot(aes(x = concrete_median, y = count)) +
geom_bar(stat = "identity", fill = "red", color = "black", alpha = 0.7) +
labs(title = "Number of Coyote Hits by Concrete vs Non-concrete Medians", x = "Concrete Median", y = "Count") +
theme_minimal()
# Group hits by unique pair ID and median type
grouped_df <- cleaned_df[!is.na(cleaned_df$New_ID_1), ] %>%
group_by(Pair_ID, New_ID_1) %>%
summarise(count = n())
# Visualize histogram of hits per median type
ggplot(grouped_df, aes(x = New_ID_1)) +
geom_bar() +
labs(title = "Number of Hits by Median Type",
x = "New_ID_1",
y = "Count") +
theme_minimal()
# Visualize histogram of hits per median type
ggplot(grouped_df, aes(x = New_ID_1)) +
geom_bar() +
labs(title = "Number of Hits by Median Type",
x = "Median Type",
y = "Count") +
theme_minimal()
# Visualize histogram of hits per median pair
ggplot(grouped_df, aes(x = Pair_ID)) +
geom_bar() +
labs(title = "Number of Hits by Median Type",
x = "Median Type",
y = "Count") +
theme_minimal()
grouped_df
ggplot(data, aes(x = factor(Pair_ID), y = count, fill = New_ID_1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count for each Pair_ID by New_ID_1",
x = "Pair_ID",
y = "Count") +
theme_minimal() +
scale_fill_brewer(palette = "Set1")
ggplot(grouped_df, aes(x = factor(Pair_ID), y = count, fill = New_ID_1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count for each Pair_ID by New_ID_1",
x = "Pair_ID",
y = "Count") +
theme_minimal() +
scale_fill_brewer(palette = "Set1")
ggplot(grouped_df, aes(x = factor(Pair_ID), y = count, fill = New_ID_1)) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Count for each Pair_ID by New_ID_1",
x = "Pair_ID",
y = "Count") +
theme_minimal() +
scale_fill_brewer(palette = "Set1")
ggplot(grouped_df, aes(x = factor(Pair_ID), y = count, fill = New_ID_1)) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Number of Hits per Road Transect by Median Type",
x = "Pair_ID",
y = "Count") +
theme_minimal() +
scale_fill_brewer(palette = "Set1")
# Summarize the data by median type
contingency_table <- cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = sum(count)) %>%
ungroup()
head(cleaned_df_filtered)
typeof(cleaned_df_filtered$concrete_median)
contingency_table <- cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = sum(count, na.rm = TRUE)) %>%
ungroup()
# Summarize the data by median type
contingency_table <- cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = sum(count)) #%>%
# Summarize the data by median type
contingency_table <- cleaned_df_filtered %>%
group_by(concrete_median) %>%
summarise(count = sum(count)) #%>%
# Summarize the data by median type
contingency_table <- cleaned_df_filtered %>%
group_by(concrete_median) %>%
# summarise(count = sum(count)) #%>%
#ungroup()
# Print the contingency table
print(contingency_table)
# Summarize the data by median type
contingency_table <- cleaned_df_filtered %>%
group_by(concrete_median) %>%
# summarise(count = sum(count)) #%>%
#ungroup()
# Print the contingency table
print(contingency_table)
# Summarize the data by median type
contingency_table <- cleaned_df_filtered %>%
group_by(concrete_median) #%>%
View(contingency_table)
# Create a contingency table
contingency_table <- table(cleaned_df_filtered$concrete_median)
# Convert the contingency table to a dataframe
contingency_df <- as.data.frame(contingency_table)
View(contingency_df)
# Perform the chi-squared test
chi_squared_test <- chisq.test(contingency_df)
# Perform the chi-squared test
chi_squared_test <- chisq.test(contingency_table)
# Print the results of the chi-squared test
print(chi_squared_test)
grouped_df
# Summary statistics per median type
summary_stats_medtype <- df %>%
group_by(New_ID_1) %>%
summarise(
mean_count = mean(count),
median_count = median(count),
sd_count = sd(count),
min_count = min(count),
max_count = max(count)
)
# Summary statistics per road transect
summary_stats_transect <- df %>%
group_by(Pair_ID) %>%
summarise(
mean_count = mean(count),
median_count = median(count),
sd_count = sd(count),
min_count = min(count),
max_count = max(count)
)
# Print the results
print(summary_stats_New_ID_1)
print(summary_stats_Pair_ID)
# Print the results
print(summary_stats_medtype)
# Summary statistics per median type
summary_stats_medtype <- df %>%
group_by(New_ID_1) %>%
summarise(
mean_count = mean(count),
median_count = median(count),
sd_count = sd(count),
min_count = min(count),
max_count = max(count)
)
# Summary statistics per median type
summary_stats_medtype <- cleaned_filtered_df %>%
group_by(New_ID_1) %>%
summarise(
mean_count = mean(count),
median_count = median(count),
sd_count = sd(count),
min_count = min(count),
max_count = max(count)
)
# Summary statistics per median type
summary_stats_medtype <- cleaned_df_filtered %>%
group_by(New_ID_1) %>%
summarise(
mean_count = mean(count),
median_count = median(count),
sd_count = sd(count),
min_count = min(count),
max_count = max(count)
)
# Summary statistics per median type
summary_stats_medtype <- grouped_df %>%
group_by(New_ID_1) %>%
summarise(
mean_count = mean(count),
median_count = median(count),
sd_count = sd(count),
min_count = min(count),
max_count = max(count)
)
# Summary statistics per road transect
summary_stats_transect <- grouped_df %>%
group_by(Pair_ID) %>%
summarise(
mean_count = mean(count),
median_count = median(count),
sd_count = sd(count),
min_count = min(count),
max_count = max(count)
)
# Print the results
print(summary_stats_medtype)
View(summary_stats_medtype)
View(summary_stats_transect)
# Summary statistics per median type
summary_stats_medtype <- grouped_df %>%
group_by(New_ID_1) %>%
summarise(
mean_count = mean(count),
median_count = median(count),
sd_count = sd(count),
min_count = min(count),
max_count = max(count)
)
# Print the results
print(summary_stats_medtype)
# Print the results of the chi-squared test
print(chi_squared_test)
contingency_table
# Visualize stacked bar plot of hits per transect by median type
ggplot(grouped_df, aes(x = factor(Pair_ID), y = count, fill = New_ID_1)) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Number of Hits per Road Transect by Median Type",
x = "Pair_ID",
y = "Count") +
theme_minimal() +
scale_fill_brewer(palette = "Set1")
View(summary_stats_medtype)
